name: QA Automation Tests

on:
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        java-version: [17]
      fail-fast: false

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        path: 3CLife_V1  # Ensures the repo is checked out into this directory

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Install Playwright CLI (API Only)
      run: |
        cd 3CLife_V1
        mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install"
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1  # ‚úÖ Prevents unnecessary browser downloads

    - name: Install Allure CLI
      run: |
        sudo apt remove -y allure || true  # Remove incorrect version if installed
        curl -o allure-2.25.0.tgz -fsSL https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
        tar -zxvf allure-2.25.0.tgz
        sudo mv allure-2.25.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
        export PATH=$PATH:/opt/allure/bin
        allure --version 

    - name: Run Playwright API Tests
      run: |
        cd 3CLife_V1
        mvn clean test -Dsurefire.failIfNoTests=false -DtestFailureIgnore=true -Dallure.results.directory=allure-results
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1  # ‚úÖ Ensures no browser download

    - name: Check Allure Results
      run: |
        if [ ! -d "3CLife_V1/allure-results" ] || [ -z "$(ls -A 3CLife_V1/allure-results)" ]; then
          echo "‚ùå No Allure results found! Exiting..."
          exit 1
        fi

    - name: Generate Allure Report
      run: |
        cd 3CLife_V1
        allure generate --clean allure-results -o allure-report || { echo "‚ùå Allure report generation failed!"; exit 1; }

    - name: Check Allure Report
      run: |
        if [ ! -d "3CLife_V1/allure-report" ] || [ -z "$(ls -A 3CLife_V1/allure-report)" ]; then
          echo "‚ùå No Allure report generated!"
          exit 1
        fi

    - name: Upload Allure Report Artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: 3CLife_V1/allure-report

    - name: Deploy Allure Report to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: 3CLife_V1/allure-report
        clean: true  # Remove old files before deploying
        repository-name: ${{ github.repository }}
        repository-path: 3CLife_V1  # ‚úÖ Fix: Ensure deployment runs inside the Git repo


    - name: Share GitHub Pages Link
      run: |
        echo "‚úÖ Allure Report deployed at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"

    - name: Send Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: "üìä Test execution completed. View Allure Report at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
        SLACK_COLOR: "#36a64f"
