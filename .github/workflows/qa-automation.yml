name: QA Automation Tests

on:
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write     # Required for Git operations
  pages: write        # Required to deploy to GitHub Pages
  id-token: write     # Required for GitHub Pages OIDC deployment

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        java-version: [17]
      fail-fast: false

    env:
      EMAIL: ${{ secrets.EMAIL }}
      PASSWORD: ${{ secrets.PASSWORD }}
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: 'maven'

      - name: 🧩 Install Playwright CLI (API Only)
        run: |
          mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install"

      - name: 🛠️ Install Allure CLI
        run: |
          sudo apt remove -y allure || true
          curl -o allure-2.25.0.tgz -fsSL https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
          tar -zxvf allure-2.25.0.tgz
          sudo mv allure-2.25.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
          allure --version

      - name: ▶️ Run Playwright API Tests
        run: |
          mvn clean test -Dsurefire.failIfNoTests=false -DtestFailureIgnore=true -Dallure.results.directory=allure-results

      - name: ✅ Check Allure Results Exist
        run: |
          if [ ! -d "allure-results" ] || [ -z "$(ls -A allure-results)" ]; then
            echo "❌ No Allure results found! Exiting..."
            exit 1
          fi

      - name: 📊 Generate Allure Report
        run: |
          allure generate --clean allure-results -o allure-report || {
            echo "❌ Allure report generation failed!"
            exit 1
          }

      - name: 🔍 Check Allure Report Output
        run: |
          if [ ! -d "allure-report" ] || [ -z "$(ls -A allure-report)" ]; then
            echo "❌ Allure report not generated!"
            exit 1
          fi

      - name: 📦 Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: 🚀 Deploy Allure Report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: allure-report
          clean: true
          commit-message: "🚀 Deploy Allure Report - $(date '+%Y-%m-%d %H:%M:%S')"

      - name: 🔗 Share GitHub Pages Link
        run: |
          echo "✅ Allure Report available at:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"

      - name: 📣 Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "📊 Test execution completed. View Allure Report at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          SLACK_COLOR: "#36a64f"
